/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Classificacao as PrismaClassificacao } from "@prisma/client";

export class ClassificacaoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ClassificacaoCountArgs, "select">
  ): Promise<number> {
    return this.prisma.classificacao.count(args);
  }

  async classificacaos(
    args: Prisma.ClassificacaoFindManyArgs
  ): Promise<PrismaClassificacao[]> {
    return this.prisma.classificacao.findMany(args);
  }
  async classificacao(
    args: Prisma.ClassificacaoFindUniqueArgs
  ): Promise<PrismaClassificacao | null> {
    return this.prisma.classificacao.findUnique(args);
  }
  async createClassificacao(
    args: Prisma.ClassificacaoCreateArgs
  ): Promise<PrismaClassificacao> {
    return this.prisma.classificacao.create(args);
  }
  async updateClassificacao(
    args: Prisma.ClassificacaoUpdateArgs
  ): Promise<PrismaClassificacao> {
    return this.prisma.classificacao.update(args);
  }
  async deleteClassificacao(
    args: Prisma.ClassificacaoDeleteArgs
  ): Promise<PrismaClassificacao> {
    return this.prisma.classificacao.delete(args);
  }
}
