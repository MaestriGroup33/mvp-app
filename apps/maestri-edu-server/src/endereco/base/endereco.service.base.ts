/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Endereco as PrismaEndereco } from "@prisma/client";

export class EnderecoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.EnderecoCountArgs, "select">): Promise<number> {
    return this.prisma.endereco.count(args);
  }

  async enderecos(
    args: Prisma.EnderecoFindManyArgs
  ): Promise<PrismaEndereco[]> {
    return this.prisma.endereco.findMany(args);
  }
  async endereco(
    args: Prisma.EnderecoFindUniqueArgs
  ): Promise<PrismaEndereco | null> {
    return this.prisma.endereco.findUnique(args);
  }
  async createEndereco(
    args: Prisma.EnderecoCreateArgs
  ): Promise<PrismaEndereco> {
    return this.prisma.endereco.create(args);
  }
  async updateEndereco(
    args: Prisma.EnderecoUpdateArgs
  ): Promise<PrismaEndereco> {
    return this.prisma.endereco.update(args);
  }
  async deleteEndereco(
    args: Prisma.EnderecoDeleteArgs
  ): Promise<PrismaEndereco> {
    return this.prisma.endereco.delete(args);
  }
}
