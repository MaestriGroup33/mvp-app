/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Perfil as PrismaPerfil } from "@prisma/client";

export class PerfilServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PerfilCountArgs, "select">): Promise<number> {
    return this.prisma.perfil.count(args);
  }

  async perfils(args: Prisma.PerfilFindManyArgs): Promise<PrismaPerfil[]> {
    return this.prisma.perfil.findMany(args);
  }
  async perfil(
    args: Prisma.PerfilFindUniqueArgs
  ): Promise<PrismaPerfil | null> {
    return this.prisma.perfil.findUnique(args);
  }
  async createPerfil(args: Prisma.PerfilCreateArgs): Promise<PrismaPerfil> {
    return this.prisma.perfil.create(args);
  }
  async updatePerfil(args: Prisma.PerfilUpdateArgs): Promise<PrismaPerfil> {
    return this.prisma.perfil.update(args);
  }
  async deletePerfil(args: Prisma.PerfilDeleteArgs): Promise<PrismaPerfil> {
    return this.prisma.perfil.delete(args);
  }
}
