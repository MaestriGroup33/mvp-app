/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Parcela as PrismaParcela } from "@prisma/client";

export class ParcelaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ParcelaCountArgs, "select">): Promise<number> {
    return this.prisma.parcela.count(args);
  }

  async parcelas(args: Prisma.ParcelaFindManyArgs): Promise<PrismaParcela[]> {
    return this.prisma.parcela.findMany(args);
  }
  async parcela(
    args: Prisma.ParcelaFindUniqueArgs
  ): Promise<PrismaParcela | null> {
    return this.prisma.parcela.findUnique(args);
  }
  async createParcela(args: Prisma.ParcelaCreateArgs): Promise<PrismaParcela> {
    return this.prisma.parcela.create(args);
  }
  async updateParcela(args: Prisma.ParcelaUpdateArgs): Promise<PrismaParcela> {
    return this.prisma.parcela.update(args);
  }
  async deleteParcela(args: Prisma.ParcelaDeleteArgs): Promise<PrismaParcela> {
    return this.prisma.parcela.delete(args);
  }
}
