/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Banking as PrismaBanking } from "@prisma/client";

export class BankingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BankingCountArgs, "select">): Promise<number> {
    return this.prisma.banking.count(args);
  }

  async bankings(args: Prisma.BankingFindManyArgs): Promise<PrismaBanking[]> {
    return this.prisma.banking.findMany(args);
  }
  async banking(
    args: Prisma.BankingFindUniqueArgs
  ): Promise<PrismaBanking | null> {
    return this.prisma.banking.findUnique(args);
  }
  async createBanking(args: Prisma.BankingCreateArgs): Promise<PrismaBanking> {
    return this.prisma.banking.create(args);
  }
  async updateBanking(args: Prisma.BankingUpdateArgs): Promise<PrismaBanking> {
    return this.prisma.banking.update(args);
  }
  async deleteBanking(args: Prisma.BankingDeleteArgs): Promise<PrismaBanking> {
    return this.prisma.banking.delete(args);
  }
}
