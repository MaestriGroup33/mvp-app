/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DadosEscolares as PrismaDadosEscolares } from "@prisma/client";

export class DadosEscolaresServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DadosEscolaresCountArgs, "select">
  ): Promise<number> {
    return this.prisma.dadosEscolares.count(args);
  }

  async dadosEscolaresItems(
    args: Prisma.DadosEscolaresFindManyArgs
  ): Promise<PrismaDadosEscolares[]> {
    return this.prisma.dadosEscolares.findMany(args);
  }
  async dadosEscolares(
    args: Prisma.DadosEscolaresFindUniqueArgs
  ): Promise<PrismaDadosEscolares | null> {
    return this.prisma.dadosEscolares.findUnique(args);
  }
  async createDadosEscolares(
    args: Prisma.DadosEscolaresCreateArgs
  ): Promise<PrismaDadosEscolares> {
    return this.prisma.dadosEscolares.create(args);
  }
  async updateDadosEscolares(
    args: Prisma.DadosEscolaresUpdateArgs
  ): Promise<PrismaDadosEscolares> {
    return this.prisma.dadosEscolares.update(args);
  }
  async deleteDadosEscolares(
    args: Prisma.DadosEscolaresDeleteArgs
  ): Promise<PrismaDadosEscolares> {
    return this.prisma.dadosEscolares.delete(args);
  }
}
